{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k64169479\\\\OneDrive - KONE Corporation\\\\Planning-Poker\\\\planning-poker\\\\frontend\\\\src\\\\pages\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Navbar from '../components/Navbar';\nimport VotingCards from '../components/VotingCards';\nimport UsersList from '../components/UsersList';\nimport { toast } from \"react-toastify\";\nimport './GamePage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nexport default function GamePage() {\n  _s();\n  const {\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const [gameState, setGameState] = useState({\n    players: [],\n    creator: null,\n    started: false,\n    revealed: false,\n    currentTopic: \"\"\n  });\n  const [vote, setVote] = useState(null);\n  const [roomConfig, setRoomConfig] = useState(null);\n  const [topicInput, setTopicInput] = useState(\"\");\n\n  // Default fibonacci series, will be overridden by room config if available\n  const defaultCards = [0, 1, 2, 3, 5, 8, 13, 21, 34, 65, \"?\"];\n  const username = localStorage.getItem('username');\n  const hasJoinedRef = useRef(null); // Store gameId + username combination\n  const joinErrorShownRef = useRef(false); // Prevent duplicate error toasts\n\n  useEffect(() => {\n    if (!username) {\n      navigate(`/game/${gameId}/join`);\n      return;\n    }\n\n    // Load room configuration if available\n    const savedConfig = localStorage.getItem(`room_${gameId}`);\n    if (savedConfig) {\n      const config = JSON.parse(savedConfig);\n      setRoomConfig(config);\n    }\n\n    // Create a unique key for this join attempt\n    const joinKey = `${gameId}-${username}`;\n\n    // Only emit joinGame once per unique game-username combination\n    if (hasJoinedRef.current !== joinKey) {\n      console.log('Emitting joinGame for:', username, 'in game:', gameId);\n      socket.emit('joinGame', {\n        gameId,\n        username\n      });\n      hasJoinedRef.current = joinKey;\n    } else {\n      console.log('Skipping duplicate joinGame emission for:', username, 'in game:', gameId);\n    }\n    return () => {\n      // Reset on cleanup only if we're leaving this game\n      if (hasJoinedRef.current === joinKey) {\n        hasJoinedRef.current = null;\n      }\n    };\n  }, [gameId, username, navigate]);\n\n  // Separate useEffect for setting up socket listeners\n  useEffect(() => {\n    // Reset error flag when gameId changes\n    joinErrorShownRef.current = false;\n\n    // Handle join errors (duplicate username) - ensure single listener\n    const handleJoinError = error => {\n      console.log('Join error received:', error);\n      if (error.type === 'DUPLICATE_USERNAME' && !joinErrorShownRef.current) {\n        joinErrorShownRef.current = true; // Prevent duplicate toasts\n        toast.error(error.message);\n        // Clear username from localStorage and redirect back to join page\n        localStorage.removeItem('username');\n        navigate(`/game/${gameId}/join`);\n      }\n    };\n\n    // Remove any existing listeners first to prevent duplicates\n    socket.off('joinError');\n    socket.on('updateGameState', state => {\n      setGameState(state);\n    });\n    socket.on('gameRestarted', () => {\n      setVote(null);\n    });\n    socket.on('joinError', handleJoinError);\n    return () => {\n      socket.off('updateGameState');\n      socket.off('gameRestarted');\n      socket.off('joinError', handleJoinError);\n    };\n  }, [gameId, navigate]);\n  const handleCopyLink = () => {\n    const link = `${window.location.origin}/game/${gameId}`;\n    navigator.clipboard.writeText(link).then(() => toast.success(\"Game link copied!\")).catch(() => toast.error(\"Failed to copy link\"));\n  };\n  const handleVote = num => {\n    setVote(num);\n    socket.emit('vote', {\n      gameId,\n      username,\n      vote: num\n    });\n  };\n  const handleReveal = () => {\n    socket.emit('reveal', {\n      gameId\n    });\n  };\n  const handleRestart = () => {\n    socket.emit('restartGame', {\n      gameId\n    });\n    setVote(null);\n    setCurrentTopic(\"\");\n    setTopicInput(\"\");\n  };\n  const handleStartGame = () => {\n    setCurrentTopic(topicInput);\n    setTopicInput(\"\");\n    socket.emit('startGame', {\n      gameId,\n      username\n    });\n  };\n  const allVoted = gameState.players.length > 0 && gameState.players.every(p => p.hasVoted);\n  const isCreator = username === gameState.creator;\n\n  // Get cards to display - use room config if available, otherwise default\n  const cardsToDisplay = roomConfig ? roomConfig.cards : defaultCards;\n\n  // Game Status Logic\n  let currentGameState = \"waiting\";\n  if (gameState.started && !gameState.revealed) {\n    currentGameState = \"voting\";\n  } else if (gameState.revealed) {\n    currentGameState = \"revealed\";\n  }\n\n  // Calculate average for revealed state\n  const calculateAverage = () => {\n    if (!gameState.revealed || !gameState.players) return null;\n    const numericVotes = gameState.players.filter(p => p.vote !== null && !isNaN(parseFloat(p.vote)) && isFinite(p.vote)).map(p => parseFloat(p.vote));\n    if (numericVotes.length === 0) return null;\n    const average = numericVotes.reduce((sum, vote) => sum + vote, 0) / numericVotes.length;\n    return average.toFixed(1);\n  };\n  const averageResult = calculateAverage();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-page-navbar\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"modeChange room-title\",\n          children: roomConfig ? roomConfig.name : `Planning Session`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"modeChange room-info-item\",\n            children: [\"Room ID: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"room-id\",\n              children: gameId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), roomConfig && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"modeChange room-info-item\",\n            children: [\"Deck: \", roomConfig.deckType, \" (\", cardsToDisplay.join(\", \"), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCopyLink,\n          className: \"copy-link-btn\",\n          children: \"Copy Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), isCreator && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!gameState.started && gameState.players.length >= 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartGame,\n            className: \"start-game-btn\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), gameState.started && !gameState.revealed && allVoted && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReveal,\n            className: \"reveal-cards-btn\",\n            children: \"Reveal Cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), gameState.revealed && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRestart,\n            className: \"new-round-btn\",\n            children: \"New Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"modeChange game-state-title\",\n            children: [currentGameState === \"waiting\" && \"Waiting to Start\", currentGameState === \"voting\" && \"Voting in Progress\", currentGameState === \"revealed\" && \"Results\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), currentTopic && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topic-display\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modeChange topic-title\",\n              children: [\"Topic: \", currentTopic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), currentGameState === \"waiting\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"waiting-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"modeChange waiting-text\",\n              children: gameState.players.length < 2 ? \"Waiting for more players to join...\" : \"Ready to start voting when the creator begins the session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), isCreator && gameState.players.length >= 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"topic-input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter topic for this round (optional)\",\n                value: topicInput,\n                onChange: e => setTopicInput(e.target.value),\n                className: \"topic-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), gameState.players.length >= 2 && !isCreator && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"modeChange creator-only-text\",\n              children: \"Only the room creator can start the voting session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), currentGameState === \"voting\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voting-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"modeChange voting-status\",\n              children: [gameState.players.filter(p => p.hasVoted).length, \" of \", gameState.players.length, \" participants have voted\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), vote && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"modeChange user-vote\",\n              children: [\"Your vote: \", vote]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), currentGameState === \"revealed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"revealed-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modeChange revealed-title\",\n              children: \"All Votes Revealed!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"votes-grid\",\n              children: gameState.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `player-vote-card ${player.username === username ? 'current-user' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `player-avatar ${player.username === username ? 'current-user' : ''}`,\n                  children: player.username.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `modeChange player-name ${player.username === username ? 'current-user' : ''}`,\n                  children: [player.username, player.username === username && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"you-indicator\",\n                    children: \" (You)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vote-display\",\n                  children: player.vote !== null && player.vote !== undefined ? player.vote : \"?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), averageResult && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"average-result\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"modeChange average-title\",\n                children: [\"Average: \", averageResult]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), currentGameState !== \"revealed\" && /*#__PURE__*/_jsxDEV(VotingCards, {\n          cards: cardsToDisplay,\n          selectedCard: vote,\n          onCardSelect: handleVote,\n          gameState: currentGameState,\n          disabled: currentGameState !== \"voting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list\",\n        children: /*#__PURE__*/_jsxDEV(UsersList, {\n          players: gameState.players,\n          currentUsername: username,\n          gameState: currentGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"yDYlBBKQANzFGrTc1E0pSD8F3AA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useNavigate","io","Navbar","VotingCards","UsersList","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","GamePage","_s","gameId","navigate","gameState","setGameState","players","creator","started","revealed","currentTopic","vote","setVote","roomConfig","setRoomConfig","topicInput","setTopicInput","defaultCards","username","localStorage","getItem","hasJoinedRef","joinErrorShownRef","savedConfig","config","JSON","parse","joinKey","current","console","log","emit","handleJoinError","error","type","message","removeItem","off","on","state","handleCopyLink","link","window","location","origin","navigator","clipboard","writeText","then","success","catch","handleVote","num","handleReveal","handleRestart","setCurrentTopic","handleStartGame","allVoted","length","every","p","hasVoted","isCreator","cardsToDisplay","cards","currentGameState","calculateAverage","numericVotes","filter","isNaN","parseFloat","isFinite","map","average","reduce","sum","toFixed","averageResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","deckType","join","onClick","placeholder","value","onChange","e","target","player","index","charAt","toUpperCase","undefined","selectedCard","onCardSelect","disabled","currentUsername","_c","$RefreshReg$"],"sources":["C:/Users/k64169479/OneDrive - KONE Corporation/Planning-Poker/planning-poker/frontend/src/pages/GamePage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport Navbar from '../components/Navbar';\r\nimport VotingCards from '../components/VotingCards';\r\nimport UsersList from '../components/UsersList';\r\nimport { toast } from \"react-toastify\";\r\nimport './GamePage.css';\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nexport default function GamePage() {\r\n  const { gameId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [gameState, setGameState] = useState({\r\n    players: [],\r\n    creator: null,\r\n    started: false,\r\n    revealed: false,\r\n    currentTopic: \"\"\r\n  });\r\n  const [vote, setVote] = useState(null);\r\n  const [roomConfig, setRoomConfig] = useState(null);\r\n  const [topicInput, setTopicInput] = useState(\"\");\r\n\r\n  // Default fibonacci series, will be overridden by room config if available\r\n  const defaultCards = [0, 1, 2, 3, 5, 8, 13, 21, 34, 65, \"?\"];\r\n  const username = localStorage.getItem('username');\r\n\r\n  const hasJoinedRef = useRef(null); // Store gameId + username combination\r\n  const joinErrorShownRef = useRef(false); // Prevent duplicate error toasts\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      navigate(`/game/${gameId}/join`);\r\n      return;\r\n    }\r\n\r\n    // Load room configuration if available\r\n    const savedConfig = localStorage.getItem(`room_${gameId}`);\r\n    if (savedConfig) {\r\n      const config = JSON.parse(savedConfig);\r\n      setRoomConfig(config);\r\n    }\r\n\r\n    // Create a unique key for this join attempt\r\n    const joinKey = `${gameId}-${username}`;\r\n    \r\n    // Only emit joinGame once per unique game-username combination\r\n    if (hasJoinedRef.current !== joinKey) {\r\n      console.log('Emitting joinGame for:', username, 'in game:', gameId);\r\n      socket.emit('joinGame', { gameId, username });\r\n      hasJoinedRef.current = joinKey;\r\n    } else {\r\n      console.log('Skipping duplicate joinGame emission for:', username, 'in game:', gameId);\r\n    }\r\n\r\n    return () => {\r\n      // Reset on cleanup only if we're leaving this game\r\n      if (hasJoinedRef.current === joinKey) {\r\n        hasJoinedRef.current = null;\r\n      }\r\n    };\r\n  }, [gameId, username, navigate]);\r\n\r\n  // Separate useEffect for setting up socket listeners\r\n  useEffect(() => {\r\n    // Reset error flag when gameId changes\r\n    joinErrorShownRef.current = false;\r\n    \r\n    // Handle join errors (duplicate username) - ensure single listener\r\n    const handleJoinError = (error) => {\r\n      console.log('Join error received:', error);\r\n      if (error.type === 'DUPLICATE_USERNAME' && !joinErrorShownRef.current) {\r\n        joinErrorShownRef.current = true; // Prevent duplicate toasts\r\n        toast.error(error.message);\r\n        // Clear username from localStorage and redirect back to join page\r\n        localStorage.removeItem('username');\r\n        navigate(`/game/${gameId}/join`);\r\n      }\r\n    };\r\n\r\n    // Remove any existing listeners first to prevent duplicates\r\n    socket.off('joinError');\r\n    \r\n    socket.on('updateGameState', (state) => {\r\n      setGameState(state);\r\n    });\r\n\r\n    socket.on('gameRestarted', () => {\r\n      setVote(null);\r\n    });\r\n\r\n    socket.on('joinError', handleJoinError);\r\n\r\n    return () => {\r\n      socket.off('updateGameState');\r\n      socket.off('gameRestarted');\r\n      socket.off('joinError', handleJoinError);\r\n    };\r\n  }, [gameId, navigate]);\r\n\r\n  const handleCopyLink = () => {\r\n    const link = `${window.location.origin}/game/${gameId}`;\r\n    navigator.clipboard.writeText(link)\r\n      .then(() => toast.success(\"Game link copied!\"))\r\n      .catch(() => toast.error(\"Failed to copy link\"));\r\n  };\r\n\r\n  const handleVote = (num) => {\r\n    setVote(num);\r\n    socket.emit('vote', { gameId, username, vote: num });\r\n  };\r\n\r\n  const handleReveal = () => {\r\n    socket.emit('reveal', { gameId });\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    socket.emit('restartGame', { gameId });\r\n    setVote(null);\r\n    setCurrentTopic(\"\");\r\n    setTopicInput(\"\");\r\n  };\r\n\r\n  const handleStartGame = () => {\r\n    setCurrentTopic(topicInput);\r\n    setTopicInput(\"\");\r\n    socket.emit('startGame', { gameId, username });\r\n  };\r\n\r\n  const allVoted = gameState.players.length > 0 && gameState.players.every((p) => p.hasVoted);\r\n  const isCreator = username === gameState.creator;\r\n\r\n  // Get cards to display - use room config if available, otherwise default\r\n  const cardsToDisplay = roomConfig ? roomConfig.cards : defaultCards;\r\n\r\n  // Game Status Logic\r\n  let currentGameState = \"waiting\";\r\n  if (gameState.started && !gameState.revealed) {\r\n    currentGameState = \"voting\";\r\n  } else if (gameState.revealed) {\r\n    currentGameState = \"revealed\";\r\n  }\r\n\r\n  // Calculate average for revealed state\r\n  const calculateAverage = () => {\r\n    if (!gameState.revealed || !gameState.players) return null;\r\n\r\n    const numericVotes = gameState.players\r\n      .filter(p => p.vote !== null && !isNaN(parseFloat(p.vote)) && isFinite(p.vote))\r\n      .map(p => parseFloat(p.vote));\r\n\r\n    if (numericVotes.length === 0) return null;\r\n\r\n    const average = numericVotes.reduce((sum, vote) => sum + vote, 0) / numericVotes.length;\r\n    return average.toFixed(1);\r\n  };\r\n\r\n  const averageResult = calculateAverage();\r\n\r\n  return (\r\n    <div className=\"game-page\">\r\n      <div className=\"game-page-navbar\">\r\n        <Navbar />\r\n      </div>\r\n\r\n      {/* Room Header */}\r\n      <div className=\"room-header\">\r\n        <div>\r\n          <h1\r\n            className=\"modeChange room-title\"\r\n          >\r\n            {roomConfig ? roomConfig.name : `Planning Session`}\r\n          </h1>\r\n          <div className=\"room-info\">\r\n            <span\r\n              className=\"modeChange room-info-item\"\r\n            >\r\n              Room ID: <strong className=\"room-id\">{gameId}</strong>\r\n            </span>\r\n            {roomConfig && (\r\n              <span\r\n                className=\"modeChange room-info-item\"\r\n              >\r\n                Deck: {roomConfig.deckType} ({cardsToDisplay.join(\", \")})\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"header-buttons\">\r\n          <button\r\n            onClick={handleCopyLink}\r\n            className=\"copy-link-btn\"\r\n          >\r\n            Copy Link\r\n          </button>\r\n\r\n          {isCreator && (\r\n            <>\r\n              {!gameState.started && gameState.players.length >= 2 && (\r\n                <button\r\n                  onClick={handleStartGame}\r\n                  className=\"start-game-btn\"\r\n                >\r\n                  Start Game\r\n                </button>\r\n              )}\r\n\r\n              {gameState.started && !gameState.revealed && allVoted && (\r\n                <button\r\n                  onClick={handleReveal}\r\n                  className=\"reveal-cards-btn\"\r\n                >\r\n                  Reveal Cards\r\n                </button>\r\n              )}\r\n\r\n              {gameState.revealed && (\r\n                <button\r\n                  onClick={handleRestart}\r\n                  className=\"new-round-btn\"\r\n                >\r\n                  New Round\r\n                </button>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"main-content\">\r\n        {/* Game Area */}\r\n        <div className=\"game-area\">\r\n          {/* Center Game State Display */}\r\n          <div className=\"game-center\">\r\n            <h2\r\n              className=\"modeChange game-state-title\"\r\n            >\r\n              {currentGameState === \"waiting\" && \"Waiting to Start\"}\r\n              {currentGameState === \"voting\" && \"Voting in Progress\"}\r\n              {currentGameState === \"revealed\" && \"Results\"}\r\n            </h2>\r\n\r\n            {/* Topic Display */}\r\n            {currentTopic && (\r\n              <div className=\"topic-display\">\r\n                <h3\r\n                  className=\"modeChange topic-title\"\r\n                >\r\n                  Topic: {currentTopic}\r\n                </h3>\r\n              </div>\r\n            )}\r\n\r\n            {currentGameState === \"waiting\" && (\r\n              <div className=\"waiting-content\">\r\n                <p className=\"modeChange waiting-text\">\r\n                  {gameState.players.length < 2\r\n                    ? \"Waiting for more players to join...\"\r\n                    : \"Ready to start voting when the creator begins the session\"}\r\n                </p>\r\n\r\n                {/* Topic Input for Creator */}\r\n                {isCreator && gameState.players.length >= 2 && (\r\n                  <div className=\"topic-input-container\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter topic for this round (optional)\"\r\n                      value={topicInput}\r\n                      onChange={(e) => setTopicInput(e.target.value)}\r\n                      className=\"topic-input\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {gameState.players.length >= 2 && !isCreator && (\r\n                  <p className=\"modeChange creator-only-text\">\r\n                    Only the room creator can start the voting session\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {currentGameState === \"voting\" && (\r\n              <div className=\"voting-content\">\r\n                <p className=\"modeChange voting-status\">\r\n                  {gameState.players.filter(p => p.hasVoted).length} of {gameState.players.length} participants have voted\r\n                </p>\r\n                {vote && (\r\n                  <p className=\"modeChange user-vote\">\r\n                    Your vote: {vote}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {currentGameState === \"revealed\" && (\r\n              <div className=\"revealed-content\">\r\n                <h3 className=\"modeChange revealed-title\">\r\n                  All Votes Revealed!\r\n                </h3>\r\n\r\n                {/* Display All Votes */}\r\n                <div className=\"votes-grid\">\r\n                  {gameState.players.map((player, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`player-vote-card ${player.username === username ? 'current-user' : ''}`}\r\n                    >\r\n                      {/* Player Avatar */}\r\n                      <div\r\n                        className={`player-avatar ${player.username === username ? 'current-user' : ''}`}\r\n                      >\r\n                        {player.username.charAt(0).toUpperCase()}\r\n                      </div>\r\n\r\n                      {/* Player Name */}\r\n                      <div\r\n                        className={`modeChange player-name ${player.username === username ? 'current-user' : ''}`}\r\n                      >\r\n                        {player.username}\r\n                        {player.username === username && (\r\n                          <span className=\"you-indicator\"> (You)</span>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* Vote Display */}\r\n                      <div className=\"vote-display\">\r\n                        {player.vote !== null && player.vote !== undefined ? player.vote : \"?\"}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Show Average if there are numeric votes */}\r\n                {averageResult && (\r\n                  <div className=\"average-result\">\r\n                    <h4 className=\"modeChange average-title\">\r\n                      Average: {averageResult}\r\n                    </h4>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Voting Cards - Hide when revealed */}\r\n          {currentGameState !== \"revealed\" && (\r\n            <VotingCards\r\n              cards={cardsToDisplay}\r\n              selectedCard={vote}\r\n              onCardSelect={handleVote}\r\n              gameState={currentGameState}\r\n              disabled={currentGameState !== \"voting\"}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Users List */}\r\n        <div className=\"users-list\">\r\n          <UsersList\r\n            players={gameState.players}\r\n            currentUsername={username}\r\n            gameState={currentGameState}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,MAAM,GAAGT,EAAE,CAAC,uBAAuB,CAAC;AAE1C,eAAe,SAASU,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAO,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC;IACzCoB,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM+B,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAC5D,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAEjD,MAAMC,YAAY,GAAGlC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EACnC,MAAMmC,iBAAiB,GAAGnC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzCF,SAAS,CAAC,MAAM;IACd,IAAI,CAACiC,QAAQ,EAAE;MACbf,QAAQ,CAAC,SAASD,MAAM,OAAO,CAAC;MAChC;IACF;;IAEA;IACA,MAAMqB,WAAW,GAAGJ,YAAY,CAACC,OAAO,CAAC,QAAQlB,MAAM,EAAE,CAAC;IAC1D,IAAIqB,WAAW,EAAE;MACf,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC;MACtCT,aAAa,CAACU,MAAM,CAAC;IACvB;;IAEA;IACA,MAAMG,OAAO,GAAG,GAAGzB,MAAM,IAAIgB,QAAQ,EAAE;;IAEvC;IACA,IAAIG,YAAY,CAACO,OAAO,KAAKD,OAAO,EAAE;MACpCE,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEZ,QAAQ,EAAE,UAAU,EAAEhB,MAAM,CAAC;MACnEH,MAAM,CAACgC,IAAI,CAAC,UAAU,EAAE;QAAE7B,MAAM;QAAEgB;MAAS,CAAC,CAAC;MAC7CG,YAAY,CAACO,OAAO,GAAGD,OAAO;IAChC,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEZ,QAAQ,EAAE,UAAU,EAAEhB,MAAM,CAAC;IACxF;IAEA,OAAO,MAAM;MACX;MACA,IAAImB,YAAY,CAACO,OAAO,KAAKD,OAAO,EAAE;QACpCN,YAAY,CAACO,OAAO,GAAG,IAAI;MAC7B;IACF,CAAC;EACH,CAAC,EAAE,CAAC1B,MAAM,EAAEgB,QAAQ,EAAEf,QAAQ,CAAC,CAAC;;EAEhC;EACAlB,SAAS,CAAC,MAAM;IACd;IACAqC,iBAAiB,CAACM,OAAO,GAAG,KAAK;;IAEjC;IACA,MAAMI,eAAe,GAAIC,KAAK,IAAK;MACjCJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,KAAK,CAAC;MAC1C,IAAIA,KAAK,CAACC,IAAI,KAAK,oBAAoB,IAAI,CAACZ,iBAAiB,CAACM,OAAO,EAAE;QACrEN,iBAAiB,CAACM,OAAO,GAAG,IAAI,CAAC,CAAC;QAClClC,KAAK,CAACuC,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;QAC1B;QACAhB,YAAY,CAACiB,UAAU,CAAC,UAAU,CAAC;QACnCjC,QAAQ,CAAC,SAASD,MAAM,OAAO,CAAC;MAClC;IACF,CAAC;;IAED;IACAH,MAAM,CAACsC,GAAG,CAAC,WAAW,CAAC;IAEvBtC,MAAM,CAACuC,EAAE,CAAC,iBAAiB,EAAGC,KAAK,IAAK;MACtClC,YAAY,CAACkC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEFxC,MAAM,CAACuC,EAAE,CAAC,eAAe,EAAE,MAAM;MAC/B1B,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC;IAEFb,MAAM,CAACuC,EAAE,CAAC,WAAW,EAAEN,eAAe,CAAC;IAEvC,OAAO,MAAM;MACXjC,MAAM,CAACsC,GAAG,CAAC,iBAAiB,CAAC;MAC7BtC,MAAM,CAACsC,GAAG,CAAC,eAAe,CAAC;MAC3BtC,MAAM,CAACsC,GAAG,CAAC,WAAW,EAAEL,eAAe,CAAC;IAC1C,CAAC;EACH,CAAC,EAAE,CAAC9B,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAEtB,MAAMqC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,IAAI,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,SAAS1C,MAAM,EAAE;IACvD2C,SAAS,CAACC,SAAS,CAACC,SAAS,CAACN,IAAI,CAAC,CAChCO,IAAI,CAAC,MAAMtD,KAAK,CAACuD,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAC9CC,KAAK,CAAC,MAAMxD,KAAK,CAACuC,KAAK,CAAC,qBAAqB,CAAC,CAAC;EACpD,CAAC;EAED,MAAMkB,UAAU,GAAIC,GAAG,IAAK;IAC1BxC,OAAO,CAACwC,GAAG,CAAC;IACZrD,MAAM,CAACgC,IAAI,CAAC,MAAM,EAAE;MAAE7B,MAAM;MAAEgB,QAAQ;MAAEP,IAAI,EAAEyC;IAAI,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBtD,MAAM,CAACgC,IAAI,CAAC,QAAQ,EAAE;MAAE7B;IAAO,CAAC,CAAC;EACnC,CAAC;EAED,MAAMoD,aAAa,GAAGA,CAAA,KAAM;IAC1BvD,MAAM,CAACgC,IAAI,CAAC,aAAa,EAAE;MAAE7B;IAAO,CAAC,CAAC;IACtCU,OAAO,CAAC,IAAI,CAAC;IACb2C,eAAe,CAAC,EAAE,CAAC;IACnBvC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMwC,eAAe,GAAGA,CAAA,KAAM;IAC5BD,eAAe,CAACxC,UAAU,CAAC;IAC3BC,aAAa,CAAC,EAAE,CAAC;IACjBjB,MAAM,CAACgC,IAAI,CAAC,WAAW,EAAE;MAAE7B,MAAM;MAAEgB;IAAS,CAAC,CAAC;EAChD,CAAC;EAED,MAAMuC,QAAQ,GAAGrD,SAAS,CAACE,OAAO,CAACoD,MAAM,GAAG,CAAC,IAAItD,SAAS,CAACE,OAAO,CAACqD,KAAK,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC;EAC3F,MAAMC,SAAS,GAAG5C,QAAQ,KAAKd,SAAS,CAACG,OAAO;;EAEhD;EACA,MAAMwD,cAAc,GAAGlD,UAAU,GAAGA,UAAU,CAACmD,KAAK,GAAG/C,YAAY;;EAEnE;EACA,IAAIgD,gBAAgB,GAAG,SAAS;EAChC,IAAI7D,SAAS,CAACI,OAAO,IAAI,CAACJ,SAAS,CAACK,QAAQ,EAAE;IAC5CwD,gBAAgB,GAAG,QAAQ;EAC7B,CAAC,MAAM,IAAI7D,SAAS,CAACK,QAAQ,EAAE;IAC7BwD,gBAAgB,GAAG,UAAU;EAC/B;;EAEA;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAC9D,SAAS,CAACK,QAAQ,IAAI,CAACL,SAAS,CAACE,OAAO,EAAE,OAAO,IAAI;IAE1D,MAAM6D,YAAY,GAAG/D,SAAS,CAACE,OAAO,CACnC8D,MAAM,CAACR,CAAC,IAAIA,CAAC,CAACjD,IAAI,KAAK,IAAI,IAAI,CAAC0D,KAAK,CAACC,UAAU,CAACV,CAAC,CAACjD,IAAI,CAAC,CAAC,IAAI4D,QAAQ,CAACX,CAAC,CAACjD,IAAI,CAAC,CAAC,CAC9E6D,GAAG,CAACZ,CAAC,IAAIU,UAAU,CAACV,CAAC,CAACjD,IAAI,CAAC,CAAC;IAE/B,IAAIwD,YAAY,CAACT,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAE1C,MAAMe,OAAO,GAAGN,YAAY,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEhE,IAAI,KAAKgE,GAAG,GAAGhE,IAAI,EAAE,CAAC,CAAC,GAAGwD,YAAY,CAACT,MAAM;IACvF,OAAOe,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,aAAa,GAAGX,gBAAgB,CAAC,CAAC;EAExC,oBACEtE,OAAA;IAAKkF,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnF,OAAA;MAAKkF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BnF,OAAA,CAACL,MAAM;QAAAyF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAGNvF,OAAA;MAAKkF,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BnF,OAAA;QAAAmF,QAAA,gBACEnF,OAAA;UACEkF,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAEhClE,UAAU,GAAGA,UAAU,CAACuE,IAAI,GAAG;QAAkB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACLvF,OAAA;UAAKkF,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBnF,OAAA;YACEkF,SAAS,EAAC,2BAA2B;YAAAC,QAAA,GACtC,WACU,eAAAnF,OAAA;cAAQkF,SAAS,EAAC,SAAS;cAAAC,QAAA,EAAE7E;YAAM;cAAA8E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,EACNtE,UAAU,iBACTjB,OAAA;YACEkF,SAAS,EAAC,2BAA2B;YAAAC,QAAA,GACtC,QACO,EAAClE,UAAU,CAACwE,QAAQ,EAAC,IAAE,EAACtB,cAAc,CAACuB,IAAI,CAAC,IAAI,CAAC,EAAC,GAC1D;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENvF,OAAA;QAAKkF,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BnF,OAAA;UACE2F,OAAO,EAAE/C,cAAe;UACxBsC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC1B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAERrB,SAAS,iBACRlE,OAAA,CAAAE,SAAA;UAAAiF,QAAA,GACG,CAAC3E,SAAS,CAACI,OAAO,IAAIJ,SAAS,CAACE,OAAO,CAACoD,MAAM,IAAI,CAAC,iBAClD9D,OAAA;YACE2F,OAAO,EAAE/B,eAAgB;YACzBsB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC3B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,EAEA/E,SAAS,CAACI,OAAO,IAAI,CAACJ,SAAS,CAACK,QAAQ,IAAIgD,QAAQ,iBACnD7D,OAAA;YACE2F,OAAO,EAAElC,YAAa;YACtByB,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC7B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,EAEA/E,SAAS,CAACK,QAAQ,iBACjBb,OAAA;YACE2F,OAAO,EAAEjC,aAAc;YACvBwB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA,eACD,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNvF,OAAA;MAAKkF,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3BnF,OAAA;QAAKkF,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAExBnF,OAAA;UAAKkF,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BnF,OAAA;YACEkF,SAAS,EAAC,6BAA6B;YAAAC,QAAA,GAEtCd,gBAAgB,KAAK,SAAS,IAAI,kBAAkB,EACpDA,gBAAgB,KAAK,QAAQ,IAAI,oBAAoB,EACrDA,gBAAgB,KAAK,UAAU,IAAI,SAAS;UAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,EAGJzE,YAAY,iBACXd,OAAA;YAAKkF,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC5BnF,OAAA;cACEkF,SAAS,EAAC,wBAAwB;cAAAC,QAAA,GACnC,SACQ,EAACrE,YAAY;YAAA;cAAAsE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACN,EAEAlB,gBAAgB,KAAK,SAAS,iBAC7BrE,OAAA;YAAKkF,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BnF,OAAA;cAAGkF,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EACnC3E,SAAS,CAACE,OAAO,CAACoD,MAAM,GAAG,CAAC,GACzB,qCAAqC,GACrC;YAA2D;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9D,CAAC,EAGHrB,SAAS,IAAI1D,SAAS,CAACE,OAAO,CAACoD,MAAM,IAAI,CAAC,iBACzC9D,OAAA;cAAKkF,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eACpCnF,OAAA;gBACEsC,IAAI,EAAC,MAAM;gBACXsD,WAAW,EAAC,uCAAuC;gBACnDC,KAAK,EAAE1E,UAAW;gBAClB2E,QAAQ,EAAGC,CAAC,IAAK3E,aAAa,CAAC2E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBAC/CX,SAAS,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN,EAEA/E,SAAS,CAACE,OAAO,CAACoD,MAAM,IAAI,CAAC,IAAI,CAACI,SAAS,iBAC1ClE,OAAA;cAAGkF,SAAS,EAAC,8BAA8B;cAAAC,QAAA,EAAC;YAE5C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN,EAEAlB,gBAAgB,KAAK,QAAQ,iBAC5BrE,OAAA;YAAKkF,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BnF,OAAA;cAAGkF,SAAS,EAAC,0BAA0B;cAAAC,QAAA,GACpC3E,SAAS,CAACE,OAAO,CAAC8D,MAAM,CAACR,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,CAACH,MAAM,EAAC,MAAI,EAACtD,SAAS,CAACE,OAAO,CAACoD,MAAM,EAAC,0BAClF;YAAA;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EACHxE,IAAI,iBACHf,OAAA;cAAGkF,SAAS,EAAC,sBAAsB;cAAAC,QAAA,GAAC,aACvB,EAACpE,IAAI;YAAA;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CACJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN,EAEAlB,gBAAgB,KAAK,UAAU,iBAC9BrE,OAAA;YAAKkF,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BnF,OAAA;cAAIkF,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAC;YAE1C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAGLvF,OAAA;cAAKkF,SAAS,EAAC,YAAY;cAAAC,QAAA,EACxB3E,SAAS,CAACE,OAAO,CAACkE,GAAG,CAAC,CAACqB,MAAM,EAAEC,KAAK,kBACnClG,OAAA;gBAEEkF,SAAS,EAAE,oBAAoBe,MAAM,CAAC3E,QAAQ,KAAKA,QAAQ,GAAG,cAAc,GAAG,EAAE,EAAG;gBAAA6D,QAAA,gBAGpFnF,OAAA;kBACEkF,SAAS,EAAE,iBAAiBe,MAAM,CAAC3E,QAAQ,KAAKA,QAAQ,GAAG,cAAc,GAAG,EAAE,EAAG;kBAAA6D,QAAA,EAEhFc,MAAM,CAAC3E,QAAQ,CAAC6E,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;gBAAC;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC,CAAC,eAGNvF,OAAA;kBACEkF,SAAS,EAAE,0BAA0Be,MAAM,CAAC3E,QAAQ,KAAKA,QAAQ,GAAG,cAAc,GAAG,EAAE,EAAG;kBAAA6D,QAAA,GAEzFc,MAAM,CAAC3E,QAAQ,EACf2E,MAAM,CAAC3E,QAAQ,KAAKA,QAAQ,iBAC3BtB,OAAA;oBAAMkF,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAC;kBAAM;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAC7C;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eAGNvF,OAAA;kBAAKkF,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAC1Bc,MAAM,CAAClF,IAAI,KAAK,IAAI,IAAIkF,MAAM,CAAClF,IAAI,KAAKsF,SAAS,GAAGJ,MAAM,CAAClF,IAAI,GAAG;gBAAG;kBAAAqE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnE,CAAC;cAAA,GAvBDW,KAAK;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAwBP,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,EAGLN,aAAa,iBACZjF,OAAA;cAAKkF,SAAS,EAAC,gBAAgB;cAAAC,QAAA,eAC7BnF,OAAA;gBAAIkF,SAAS,EAAC,0BAA0B;gBAAAC,QAAA,GAAC,WAC9B,EAACF,aAAa;cAAA;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAGLlB,gBAAgB,KAAK,UAAU,iBAC9BrE,OAAA,CAACJ,WAAW;UACVwE,KAAK,EAAED,cAAe;UACtBmC,YAAY,EAAEvF,IAAK;UACnBwF,YAAY,EAAEhD,UAAW;UACzB/C,SAAS,EAAE6D,gBAAiB;UAC5BmC,QAAQ,EAAEnC,gBAAgB,KAAK;QAAS;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGNvF,OAAA;QAAKkF,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBnF,OAAA,CAACH,SAAS;UACRa,OAAO,EAAEF,SAAS,CAACE,OAAQ;UAC3B+F,eAAe,EAAEnF,QAAS;UAC1Bd,SAAS,EAAE6D;QAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClF,EAAA,CAzWuBD,QAAQ;EAAA,QACXZ,SAAS,EACXC,WAAW;AAAA;AAAAiH,EAAA,GAFNtG,QAAQ;AAAA,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}