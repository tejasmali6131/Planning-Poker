{"ast":null,"code":"var _jsxFileName = \"C:\\\\Planning-Poker\\\\planning-poker\\\\frontend\\\\src\\\\components\\\\VotingCards.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VotingCards({\n  cards,\n  selectedCard,\n  onCardSelect,\n  gameState,\n  disabled\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      backgroundColor: \"white\",\n      borderTop: \"1px solid #e0e0e0\",\n      minHeight: \"120px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"modeChange\",\n      style: {\n        margin: \"0 0 15px 0\",\n        fontSize: \"16px\",\n        color: \"#004798ff\",\n        textAlign: \"center\"\n      },\n      children: gameState === \"voting\" ? \"Select a card:\" : \"Estimation Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        gap: \"10px\",\n        maxWidth: \"800px\",\n        margin: \"0 auto\"\n      },\n      children: cards.map((card, index) => {\n        const isSelected = selectedCard === card;\n        const isClickable = !disabled && gameState === \"voting\";\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => isClickable && onCardSelect(card),\n          disabled: disabled,\n          style: {\n            width: \"60px\",\n            height: \"80px\",\n            borderRadius: \"8px\",\n            border: isSelected ? \"3px solid #0068dfff\" : \"2px solid #e0e0e0\",\n            backgroundColor: isSelected ? \"#f0f8ff\" : disabled ? \"#f8f9fa\" : \"white\",\n            color: disabled ? \"#999\" : isSelected ? \"#0068dfff\" : \"#333\",\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            cursor: isClickable ? \"pointer\" : \"not-allowed\",\n            transition: \"all 0.3s\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            boxShadow: isSelected ? \"0 4px 12px rgba(0, 104, 223, 0.3)\" : \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n            transform: isSelected ? \"scale(1.05)\" : \"scale(1)\",\n            opacity: disabled ? 0.6 : 1\n          },\n          onMouseEnter: e => {\n            if (isClickable && !isSelected) {\n              e.target.style.backgroundColor = \"#f8f9fa\";\n              e.target.style.borderColor = \"#51b1ffff\";\n              e.target.style.transform = \"scale(1.02)\";\n            }\n          },\n          onMouseLeave: e => {\n            if (isClickable && !isSelected) {\n              e.target.style.backgroundColor = \"white\";\n              e.target.style.borderColor = \"#e0e0e0\";\n              e.target.style.transform = \"scale(1)\";\n            }\n          },\n          children: card === \"∞\" ? \"∞\" : card === \"?\" ? \"?\" : card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"15px\",\n        textAlign: \"center\",\n        fontSize: \"14px\",\n        color: \"#666\"\n      },\n      children: getStatusMessage(gameState, disabled, selectedCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = VotingCards;\nfunction getStatusMessage(gameState, disabled, selectedCard) {\n  if (gameState === \"waiting\") {\n    return \"Waiting for voting to start...\";\n  }\n  if (gameState === \"voting\") {\n    if (selectedCard) {\n      return `You selected: ${selectedCard}`;\n    }\n    return \"Click on a card to vote\";\n  }\n  if (gameState === \"revealed\") {\n    return \"Voting round completed\";\n  }\n  return \"\";\n}\nvar _c;\n$RefreshReg$(_c, \"VotingCards\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VotingCards","cards","selectedCard","onCardSelect","gameState","disabled","style","padding","backgroundColor","borderTop","minHeight","display","flexDirection","justifyContent","children","className","margin","fontSize","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","flexWrap","gap","maxWidth","map","card","index","isSelected","isClickable","onClick","width","height","borderRadius","border","fontWeight","cursor","transition","alignItems","boxShadow","transform","opacity","onMouseEnter","e","target","borderColor","onMouseLeave","marginTop","getStatusMessage","_c","$RefreshReg$"],"sources":["C:/Planning-Poker/planning-poker/frontend/src/components/VotingCards.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function VotingCards({ cards, selectedCard, onCardSelect, gameState, disabled }) {\r\n    return (\r\n        <div\r\n            style={{\r\n                padding: \"20px\",\r\n                backgroundColor: \"white\",\r\n                borderTop: \"1px solid #e0e0e0\",\r\n                minHeight: \"120px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\"\r\n            }}\r\n        >\r\n            <h3\r\n                className=\"modeChange\"\r\n                style={{\r\n                    margin: \"0 0 15px 0\",\r\n                    fontSize: \"16px\",\r\n                    color: \"#004798ff\",\r\n                    textAlign: \"center\"\r\n                }}\r\n            >\r\n                {gameState === \"voting\" ? \"Select a card:\" : \"Estimation Cards\"}\r\n            </h3>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                    gap: \"10px\",\r\n                    maxWidth: \"800px\",\r\n                    margin: \"0 auto\"\r\n                }}\r\n            >\r\n                {cards.map((card, index) => {\r\n                    const isSelected = selectedCard === card;\r\n                    const isClickable = !disabled && gameState === \"voting\";\r\n\r\n                    return (\r\n                        <button\r\n                            key={index}\r\n                            onClick={() => isClickable && onCardSelect(card)}\r\n                            disabled={disabled}\r\n                            style={{\r\n                                width: \"60px\",\r\n                                height: \"80px\",\r\n                                borderRadius: \"8px\",\r\n                                border: isSelected ? \"3px solid #0068dfff\" : \"2px solid #e0e0e0\",\r\n                                backgroundColor: isSelected\r\n                                    ? \"#f0f8ff\"\r\n                                    : disabled\r\n                                        ? \"#f8f9fa\"\r\n                                        : \"white\",\r\n                                color: disabled ? \"#999\" : isSelected ? \"#0068dfff\" : \"#333\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"bold\",\r\n                                cursor: isClickable ? \"pointer\" : \"not-allowed\",\r\n                                transition: \"all 0.3s\",\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                                boxShadow: isSelected\r\n                                    ? \"0 4px 12px rgba(0, 104, 223, 0.3)\"\r\n                                    : \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n                                transform: isSelected ? \"scale(1.05)\" : \"scale(1)\",\r\n                                opacity: disabled ? 0.6 : 1\r\n                            }}\r\n                            onMouseEnter={(e) => {\r\n                                if (isClickable && !isSelected) {\r\n                                    e.target.style.backgroundColor = \"#f8f9fa\";\r\n                                    e.target.style.borderColor = \"#51b1ffff\";\r\n                                    e.target.style.transform = \"scale(1.02)\";\r\n                                }\r\n                            }}\r\n                            onMouseLeave={(e) => {\r\n                                if (isClickable && !isSelected) {\r\n                                    e.target.style.backgroundColor = \"white\";\r\n                                    e.target.style.borderColor = \"#e0e0e0\";\r\n                                    e.target.style.transform = \"scale(1)\";\r\n                                }\r\n                            }}\r\n                        >\r\n                            {card === \"∞\" ? \"∞\" : card === \"?\" ? \"?\" : card}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {/* Status Message */}\r\n            <div\r\n                style={{\r\n                    marginTop: \"15px\",\r\n                    textAlign: \"center\",\r\n                    fontSize: \"14px\",\r\n                    color: \"#666\"\r\n                }}\r\n            >\r\n                {getStatusMessage(gameState, disabled, selectedCard)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getStatusMessage(gameState, disabled, selectedCard) {\r\n    if (gameState === \"waiting\") {\r\n        return \"Waiting for voting to start...\";\r\n    }\r\n\r\n    if (gameState === \"voting\") {\r\n        if (selectedCard) {\r\n            return `You selected: ${selectedCard}`;\r\n        }\r\n        return \"Click on a card to vote\";\r\n    }\r\n\r\n    if (gameState === \"revealed\") {\r\n        return \"Voting round completed\";\r\n    }\r\n\r\n    return \"\";\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,WAAWA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC,YAAY;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAC5F,oBACIN,OAAA;IACIO,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE,OAAO;MACxBC,SAAS,EAAE,mBAAmB;MAC9BC,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,cAAc,EAAE;IACpB,CAAE;IAAAC,QAAA,gBAEFf,OAAA;MACIgB,SAAS,EAAC,YAAY;MACtBT,KAAK,EAAE;QACHU,MAAM,EAAE,YAAY;QACpBC,QAAQ,EAAE,MAAM;QAChBC,KAAK,EAAE,WAAW;QAClBC,SAAS,EAAE;MACf,CAAE;MAAAL,QAAA,EAEDV,SAAS,KAAK,QAAQ,GAAG,gBAAgB,GAAG;IAAkB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eAELxB,OAAA;MACIO,KAAK,EAAE;QACHK,OAAO,EAAE,MAAM;QACfE,cAAc,EAAE,QAAQ;QACxBW,QAAQ,EAAE,MAAM;QAChBC,GAAG,EAAE,MAAM;QACXC,QAAQ,EAAE,OAAO;QACjBV,MAAM,EAAE;MACZ,CAAE;MAAAF,QAAA,EAEDb,KAAK,CAAC0B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACxB,MAAMC,UAAU,GAAG5B,YAAY,KAAK0B,IAAI;QACxC,MAAMG,WAAW,GAAG,CAAC1B,QAAQ,IAAID,SAAS,KAAK,QAAQ;QAEvD,oBACIL,OAAA;UAEIiC,OAAO,EAAEA,CAAA,KAAMD,WAAW,IAAI5B,YAAY,CAACyB,IAAI,CAAE;UACjDvB,QAAQ,EAAEA,QAAS;UACnBC,KAAK,EAAE;YACH2B,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAEN,UAAU,GAAG,qBAAqB,GAAG,mBAAmB;YAChEtB,eAAe,EAAEsB,UAAU,GACrB,SAAS,GACTzB,QAAQ,GACJ,SAAS,GACT,OAAO;YACjBa,KAAK,EAAEb,QAAQ,GAAG,MAAM,GAAGyB,UAAU,GAAG,WAAW,GAAG,MAAM;YAC5Db,QAAQ,EAAE,MAAM;YAChBoB,UAAU,EAAE,MAAM;YAClBC,MAAM,EAAEP,WAAW,GAAG,SAAS,GAAG,aAAa;YAC/CQ,UAAU,EAAE,UAAU;YACtB5B,OAAO,EAAE,MAAM;YACf6B,UAAU,EAAE,QAAQ;YACpB3B,cAAc,EAAE,QAAQ;YACxB4B,SAAS,EAAEX,UAAU,GACf,mCAAmC,GACnC,8BAA8B;YACpCY,SAAS,EAAEZ,UAAU,GAAG,aAAa,GAAG,UAAU;YAClDa,OAAO,EAAEtC,QAAQ,GAAG,GAAG,GAAG;UAC9B,CAAE;UACFuC,YAAY,EAAGC,CAAC,IAAK;YACjB,IAAId,WAAW,IAAI,CAACD,UAAU,EAAE;cAC5Be,CAAC,CAACC,MAAM,CAACxC,KAAK,CAACE,eAAe,GAAG,SAAS;cAC1CqC,CAAC,CAACC,MAAM,CAACxC,KAAK,CAACyC,WAAW,GAAG,WAAW;cACxCF,CAAC,CAACC,MAAM,CAACxC,KAAK,CAACoC,SAAS,GAAG,aAAa;YAC5C;UACJ,CAAE;UACFM,YAAY,EAAGH,CAAC,IAAK;YACjB,IAAId,WAAW,IAAI,CAACD,UAAU,EAAE;cAC5Be,CAAC,CAACC,MAAM,CAACxC,KAAK,CAACE,eAAe,GAAG,OAAO;cACxCqC,CAAC,CAACC,MAAM,CAACxC,KAAK,CAACyC,WAAW,GAAG,SAAS;cACtCF,CAAC,CAACC,MAAM,CAACxC,KAAK,CAACoC,SAAS,GAAG,UAAU;YACzC;UACJ,CAAE;UAAA5B,QAAA,EAEDc,IAAI,KAAK,GAAG,GAAG,GAAG,GAAGA,IAAI,KAAK,GAAG,GAAG,GAAG,GAAGA;QAAI,GA1C1CC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2CN,CAAC;MAEjB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNxB,OAAA;MACIO,KAAK,EAAE;QACH2C,SAAS,EAAE,MAAM;QACjB9B,SAAS,EAAE,QAAQ;QACnBF,QAAQ,EAAE,MAAM;QAChBC,KAAK,EAAE;MACX,CAAE;MAAAJ,QAAA,EAEDoC,gBAAgB,CAAC9C,SAAS,EAAEC,QAAQ,EAAEH,YAAY;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC4B,EAAA,GAtGuBnD,WAAW;AAwGnC,SAASkD,gBAAgBA,CAAC9C,SAAS,EAAEC,QAAQ,EAAEH,YAAY,EAAE;EACzD,IAAIE,SAAS,KAAK,SAAS,EAAE;IACzB,OAAO,gCAAgC;EAC3C;EAEA,IAAIA,SAAS,KAAK,QAAQ,EAAE;IACxB,IAAIF,YAAY,EAAE;MACd,OAAO,iBAAiBA,YAAY,EAAE;IAC1C;IACA,OAAO,yBAAyB;EACpC;EAEA,IAAIE,SAAS,KAAK,UAAU,EAAE;IAC1B,OAAO,wBAAwB;EACnC;EAEA,OAAO,EAAE;AACb;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}